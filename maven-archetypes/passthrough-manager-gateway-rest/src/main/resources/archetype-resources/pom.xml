<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding.version>UTF-8</project.build.sourceEncoding.version>
        <rest.openapi.validator.maven.plugin.version>2.0.0</rest.openapi.validator.maven.plugin.version>
        <openapi2jsonschema4j.version>1.0.6</openapi2jsonschema4j.version>
        <manager.yaml.validator.maven.plugin.version>1.1.20</manager.yaml.validator.maven.plugin.version>
        <redactor.generator.maven.plugin.version>1.0.9</redactor.generator.maven.plugin.version>
        <jgitflow.maven.plugin.version>1.0-m5.1</jgitflow.maven.plugin.version>
        <username />
        <password />
    </properties>

    <profiles>
        <profile>
            <id>standard</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <plugins>
                    <!-- Plugin per la validazione automatica dell'interfaccia swagger -->
                    <plugin>
                        <groupId>it.imolainformatica.plugins</groupId>
                        <artifactId>rest-openapi-validator-maven-plugin</artifactId>
                        <version>${rest.openapi.validator.maven.plugin.version}</version>
                        <configuration>
                            <inputContractBasePath>${basedir}/Resources/swagger/${artifactId}.0.json</inputContractBasePath>
                            <usageProfile>DEFAULT</usageProfile>
                        </configuration>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>validate</phase>
                                <configuration />
                                <goals>
                                    <goal>validate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Plugin per la validazione automatica del file manager.yaml -->
                    <plugin>
                        <groupId>it.imolainformatica.plugins</groupId>
                        <artifactId>manager-yaml-validator-maven-plugin</artifactId>
                        <version>${manager.yaml.validator.maven.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>validate</id>
                                <phase>validate</phase>
                                <configuration />
                                <goals>
                                    <goal>validate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Plugin per la generazione del file redactor .xml -->
                    <plugin>
                        <groupId>it.imolainformatica.plugins</groupId>
                        <artifactId>redactor-generator-maven-plugin</artifactId>
                        <version>${redactor.generator.maven.plugin.version}</version>
                        <configuration>
                        </configuration>
                        <executions>
                            <execution>
                                <id>generate</id>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <redactorConfigurationFile>${basedir}/Resources/redactor/redactor.yaml</redactorConfigurationFile>
                                    <redactorOutputDirectory>${basedir}/Resources/redactor</redactorOutputDirectory>
                                </configuration>
                                <goals>
                                    <goal>generate-redactor</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Plugin di generazione dei json-schema -->
                    <plugin>
						<groupId>it.imolinfo.maven.plugins</groupId>
						<artifactId>openapi2jsonschema4j</artifactId>
						<version>${openapi2jsonschema4j.version}</version>
						<configuration>
							<strict>true</strict>
						</configuration>
						<executions>
							<execution>
								<id>${artifactId}.0.json</id>
								<phase>generate-sources</phase>
								<configuration> 
									<outputDirectory>${basedir}/target/Resources/swagger/json-schema</outputDirectory>
									<interfaceFile>${basedir}/Resources/swagger/${artifactId}.0.json</interfaceFile>
								</configuration>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
                    <!-- Plugin creazione devenv, gestione properties environmentalizzate -->
					<plugin>
						<groupId>it.imolainformatica.plugins</groupId>
						<artifactId>gateway-projects-env-analyzer-maven-plugin</artifactId>
						<version>1.0.0</version>
						<executions>
							<execution>
								<id>AnalyzeProject ${artifactId}</id>
								<phase>prepare-package</phase>
								<configuration>
									<projectDirectory>${basedir}</projectDirectory>
								</configuration>
								<goals>
									<goal>analyze-project</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
                    <!-- Plugin per il versionamento del progetto tramite GitFlow -->
                    <plugin>
                        <groupId>external.atlassian.jgitflow</groupId>
                        <artifactId>jgitflow-maven-plugin</artifactId>
                        <version>${jgitflow.maven.plugin.version}</version>
                        <configuration>
                            <username>${username}</username>
                            <password>${password}</password>
                            <noDeploy>true</noDeploy>
                            <useReleaseProfile>false</useReleaseProfile>
                            <releaseBranchVersionSuffix>RC</releaseBranchVersionSuffix>
                            <flowInitContext>
                                <masterBranchName>master</masterBranchName>
                                <developBranchName>develop</developBranchName>
                                <featureBranchPrefix>feature/</featureBranchPrefix>
                                <releaseBranchPrefix>release/</releaseBranchPrefix>
                                <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
                            </flowInitContext>
                        </configuration>
                    </plugin>
                    
<!--                     
                    <plugin>
                        <groupId>it.imolinfo.maven.plugins</groupId>
                        <artifactId>passthrough-generator</artifactId>
                        <version>3.0.7</version>
                        <configuration />
                        <executions>
                            <execution>
                                <id>generate-projects ${artifactId}.0.json</id>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <projectType>REST</projectType>
                                    <REST>
                                        <swaggerLocation>${basedir}/Resources/swagger/${artifactId}.0.json
                                        </swaggerLocation>
                                        <jsonSchemaFolderLocation>${basedir}/target/json-schema
                                        </jsonSchemaFolderLocation>
                                        <commonVersion>v2</commonVersion>
                                        <enableGatewayAccessLogging>true</enableGatewayAccessLogging>
                                    </REST>
                                    <outputDir>${basedir}/target/generated-projects</outputDir>
                                </configuration>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>align-project ${artifactId}.0.json</id>
                                <phase>prepare-package</phase>
                                <configuration>
                                    <sourceDirectory>${basedir}/target/generated-projects/${artifactId}
                                    </sourceDirectory>
                                    <targetDirectory>${basedir}</targetDirectory>
                                </configuration>
                                <goals>
                                    <goal>align-master</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
-->
                </plugins>
            </build>

        </profile>
    </profiles>
</project>
